// Code generated by entc, DO NOT EDIT.

package storage

import (
	"time"
)

const (
	// Label holds the string label denoting the storage type in the database.
	Label = "storage"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldLocation holds the string denoting the location field in the database.
	FieldLocation = "location"
	// EdgeStorageSerial holds the string denoting the storage_serial edge name in mutations.
	EdgeStorageSerial = "storage_serial"
	// Table holds the table name of the storage in the database.
	Table = "storages"
	// StorageSerialTable is the table that holds the storage_serial relation/edge.
	StorageSerialTable = "serials"
	// StorageSerialInverseTable is the table name for the Serial entity.
	// It exists in this package in order to avoid circular dependency with the "serial" package.
	StorageSerialInverseTable = "serials"
	// StorageSerialColumn is the table column denoting the storage_serial relation/edge.
	StorageSerialColumn = "storage_id"
)

// Columns holds all SQL columns for storage fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldName,
	FieldLocation,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
