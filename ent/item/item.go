// Code generated by entc, DO NOT EDIT.

package item

import (
	"time"
)

const (
	// Label holds the string label denoting the item type in the database.
	Label = "item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldSku holds the string denoting the sku field in the database.
	FieldSku = "sku"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldSellPrice holds the string denoting the sell_price field in the database.
	FieldSellPrice = "sell_price"
	// EdgeItemSerial holds the string denoting the item_serial edge name in mutations.
	EdgeItemSerial = "item_serial"
	// Table holds the table name of the item in the database.
	Table = "items"
	// ItemSerialTable is the table that holds the item_serial relation/edge.
	ItemSerialTable = "serials"
	// ItemSerialInverseTable is the table name for the Serial entity.
	// It exists in this package in order to avoid circular dependency with the "serial" package.
	ItemSerialInverseTable = "serials"
	// ItemSerialColumn is the table column denoting the item_serial relation/edge.
	ItemSerialColumn = "item_id"
)

// Columns holds all SQL columns for item fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldSku,
	FieldDesc,
	FieldSellPrice,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// SkuValidator is a validator for the "sku" field. It is called by the builders before save.
	SkuValidator func(string) error
	// SellPriceValidator is a validator for the "sell_price" field. It is called by the builders before save.
	SellPriceValidator func(float64) error
)
