// Code generated by entc, DO NOT EDIT.

package serial

import (
	"time"
)

const (
	// Label holds the string label denoting the serial type in the database.
	Label = "serial"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldStorageID holds the string denoting the storage_id field in the database.
	FieldStorageID = "storage_id"
	// FieldItemID holds the string denoting the item_id field in the database.
	FieldItemID = "item_id"
	// EdgeItem holds the string denoting the item edge name in mutations.
	EdgeItem = "item"
	// EdgeStorage holds the string denoting the storage edge name in mutations.
	EdgeStorage = "storage"
	// Table holds the table name of the serial in the database.
	Table = "serials"
	// ItemTable is the table that holds the item relation/edge.
	ItemTable = "serials"
	// ItemInverseTable is the table name for the Item entity.
	// It exists in this package in order to avoid circular dependency with the "item" package.
	ItemInverseTable = "items"
	// ItemColumn is the table column denoting the item relation/edge.
	ItemColumn = "item_id"
	// StorageTable is the table that holds the storage relation/edge.
	StorageTable = "serials"
	// StorageInverseTable is the table name for the Storage entity.
	// It exists in this package in order to avoid circular dependency with the "storage" package.
	StorageInverseTable = "storages"
	// StorageColumn is the table column denoting the storage relation/edge.
	StorageColumn = "storage_id"
)

// Columns holds all SQL columns for serial fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldStorageID,
	FieldItemID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
