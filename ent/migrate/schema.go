// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ItemsColumns holds the columns for the "items" table.
	ItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sku", Type: field.TypeString, Unique: true},
		{Name: "desc", Type: field.TypeString},
		{Name: "sell_price", Type: field.TypeFloat64},
	}
	// ItemsTable holds the schema information for the "items" table.
	ItemsTable = &schema.Table{
		Name:       "items",
		Columns:    ItemsColumns,
		PrimaryKey: []*schema.Column{ItemsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "item_sku",
				Unique:  false,
				Columns: []*schema.Column{ItemsColumns[3]},
			},
		},
	}
	// SerialsColumns holds the columns for the "serials" table.
	SerialsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "item_id", Type: field.TypeUUID},
		{Name: "storage_id", Type: field.TypeUUID},
	}
	// SerialsTable holds the schema information for the "serials" table.
	SerialsTable = &schema.Table{
		Name:       "serials",
		Columns:    SerialsColumns,
		PrimaryKey: []*schema.Column{SerialsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "serials_items_item_serial",
				Columns:    []*schema.Column{SerialsColumns[3]},
				RefColumns: []*schema.Column{ItemsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "serials_storages_storage_serial",
				Columns:    []*schema.Column{SerialsColumns[4]},
				RefColumns: []*schema.Column{StoragesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "serial_id_item_id_storage_id",
				Unique:  true,
				Columns: []*schema.Column{SerialsColumns[0], SerialsColumns[3], SerialsColumns[4]},
			},
		},
	}
	// StoragesColumns holds the columns for the "storages" table.
	StoragesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
	}
	// StoragesTable holds the schema information for the "storages" table.
	StoragesTable = &schema.Table{
		Name:       "storages",
		Columns:    StoragesColumns,
		PrimaryKey: []*schema.Column{StoragesColumns[0]},
	}
	// SuppliersColumns holds the columns for the "suppliers" table.
	SuppliersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
	}
	// SuppliersTable holds the schema information for the "suppliers" table.
	SuppliersTable = &schema.Table{
		Name:       "suppliers",
		Columns:    SuppliersColumns,
		PrimaryKey: []*schema.Column{SuppliersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ItemsTable,
		SerialsTable,
		StoragesTable,
		SuppliersTable,
	}
)

func init() {
	SerialsTable.ForeignKeys[0].RefTable = ItemsTable
	SerialsTable.ForeignKeys[1].RefTable = StoragesTable
}
