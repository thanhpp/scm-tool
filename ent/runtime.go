// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/thanhpp/scm/ent/item"
	"github.com/thanhpp/scm/ent/schema"
	"github.com/thanhpp/scm/ent/serial"
	"github.com/thanhpp/scm/ent/storage"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	itemMixin := schema.Item{}.Mixin()
	itemMixinFields0 := itemMixin[0].Fields()
	_ = itemMixinFields0
	itemFields := schema.Item{}.Fields()
	_ = itemFields
	// itemDescCreatedAt is the schema descriptor for created_at field.
	itemDescCreatedAt := itemMixinFields0[0].Descriptor()
	// item.DefaultCreatedAt holds the default value on creation for the created_at field.
	item.DefaultCreatedAt = itemDescCreatedAt.Default.(time.Time)
	// itemDescUpdatedAt is the schema descriptor for updated_at field.
	itemDescUpdatedAt := itemMixinFields0[1].Descriptor()
	// item.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	item.DefaultUpdatedAt = itemDescUpdatedAt.Default.(time.Time)
	// item.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	item.UpdateDefaultUpdatedAt = itemDescUpdatedAt.UpdateDefault.(func() time.Time)
	// itemDescSku is the schema descriptor for sku field.
	itemDescSku := itemFields[1].Descriptor()
	// item.SkuValidator is a validator for the "sku" field. It is called by the builders before save.
	item.SkuValidator = itemDescSku.Validators[0].(func(string) error)
	// itemDescSellPrice is the schema descriptor for sell_price field.
	itemDescSellPrice := itemFields[3].Descriptor()
	// item.SellPriceValidator is a validator for the "sell_price" field. It is called by the builders before save.
	item.SellPriceValidator = itemDescSellPrice.Validators[0].(func(float64) error)
	serialMixin := schema.Serial{}.Mixin()
	serialMixinFields0 := serialMixin[0].Fields()
	_ = serialMixinFields0
	serialFields := schema.Serial{}.Fields()
	_ = serialFields
	// serialDescCreatedAt is the schema descriptor for created_at field.
	serialDescCreatedAt := serialMixinFields0[0].Descriptor()
	// serial.DefaultCreatedAt holds the default value on creation for the created_at field.
	serial.DefaultCreatedAt = serialDescCreatedAt.Default.(time.Time)
	// serialDescUpdatedAt is the schema descriptor for updated_at field.
	serialDescUpdatedAt := serialMixinFields0[1].Descriptor()
	// serial.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	serial.DefaultUpdatedAt = serialDescUpdatedAt.Default.(time.Time)
	// serial.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	serial.UpdateDefaultUpdatedAt = serialDescUpdatedAt.UpdateDefault.(func() time.Time)
	storageMixin := schema.Storage{}.Mixin()
	storageMixinFields0 := storageMixin[0].Fields()
	_ = storageMixinFields0
	storageFields := schema.Storage{}.Fields()
	_ = storageFields
	// storageDescCreatedAt is the schema descriptor for created_at field.
	storageDescCreatedAt := storageMixinFields0[0].Descriptor()
	// storage.DefaultCreatedAt holds the default value on creation for the created_at field.
	storage.DefaultCreatedAt = storageDescCreatedAt.Default.(time.Time)
	// storageDescUpdatedAt is the schema descriptor for updated_at field.
	storageDescUpdatedAt := storageMixinFields0[1].Descriptor()
	// storage.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	storage.DefaultUpdatedAt = storageDescUpdatedAt.Default.(time.Time)
	// storage.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	storage.UpdateDefaultUpdatedAt = storageDescUpdatedAt.UpdateDefault.(func() time.Time)
}
